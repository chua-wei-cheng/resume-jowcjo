{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\resume_jowcjo\\\\portfolio\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport Setup from './resume';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const size = useWindowSize();\n\n  if (size.width > size.height) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Setup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }, this);\n  }\n\n  console.log(size.width);\n  console.log(\"helloworld\");\n}\n\n_s(App, \"/dTDjnwlNGsRzu12Dr5t7HJe8sA=\", false, function () {\n  return [useWindowSize];\n});\n\n_c = App;\n;\nexport default App; // Hook\n\nfunction useWindowSize() {\n  _s2();\n\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: 500,\n    height: 300\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    } // Add event listener\n\n\n    window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n    handleResize(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\n_s2(useWindowSize, \"XsgFnk80gIogqMaEdA9VI4XK/Ms=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Documents/resume_jowcjo/portfolio/src/App.js"],"names":["React","Setup","useState","useEffect","App","size","useWindowSize","width","height","console","log","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAc;AAAA;;AAEb,QAAMC,IAAI,GAAGC,aAAa,EAA1B;;AACA,MAAKD,IAAI,CAACE,KAAL,GAAaF,IAAI,CAACG,MAAvB,EAA+B;AAC9B,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA;AAKA;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAaL,IAAI,CAACE,KAAlB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA;;GAZQN,G;UAEKE,a;;;KAFLF,G;AAYR;AAGD,eAAeA,GAAf,C,CAIA;;AACA,SAASE,aAAT,GAAyB;AAAA;;AACxB;AACA;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC;AAC3CK,IAAAA,KAAK,EAAE,GADoC;AAE3CC,IAAAA,MAAM,EAAE;AAFmC,GAAD,CAA5C;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,aAASU,YAAT,GAAwB;AACzB;AACAD,MAAAA,aAAa,CAAC;AACZL,QAAAA,KAAK,EAAEO,MAAM,CAACC,UADF;AAEZP,QAAAA,MAAM,EAAEM,MAAM,CAACE;AAFH,OAAD,CAAb;AAIE,KARa,CASd;;;AACAF,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC,EAVc,CAWd;;AACAA,IAAAA,YAAY,GAZE,CAad;;AACA,WAAO,MAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC,CAAb;AACD,GAfQ,EAeN,EAfM,CAAT,CAPwB,CAsBhB;;AACR,SAAOF,UAAP;AACE;;IAxBML,a","sourcesContent":["import React from 'react';\nimport Setup from './resume';\nimport { useState, useEffect } from \"react\";\n\nfunction App(){\n\n\tconst size = useWindowSize();\n\tif ( size.width > size.height) {\n\t\treturn (\n\t\t<div className='container'>\n\t\t\t\t<Setup />\n\t\t\t</div>\n\t\t);\n\t}\n\tconsole.log((size.width));\n\tconsole.log(\"helloworld\");\n};\n\n\nexport default App;\n\n\n\n// Hook\nfunction useWindowSize() {\n\t// Initialize state with undefined width/height so server and client renders match\n\t// Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n\tconst [windowSize, setWindowSize] = useState({\n\t  width: 500,\n\t  height: 300,\n\t});\n\tuseEffect(() => {\n\t  // Handler to call on window resize\n\t  function handleResize() {\n\t\t// Set window width/height to state\n\t\tsetWindowSize({\n\t\t  width: window.innerWidth,\n\t\t  height: window.innerHeight,\n\t\t});\n\t  }\n\t  // Add event listener\n\t  window.addEventListener(\"resize\", handleResize);\n\t  // Call handler right away so state gets updated with initial window size\n\t  handleResize();\n\t  // Remove event listener on cleanup\n\t  return () => window.removeEventListener(\"resize\", handleResize);\n\t}, []); // Empty array ensures that effect is only run on mount\n\treturn windowSize;\n  }"]},"metadata":{},"sourceType":"module"}